// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

model Tag {
  id          Int          @id @default(autoincrement())
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  name        String       @unique
  parentId    Int?
  parent      Tag?         @relation("Parent", fields: [parentId], references: [id])
  children    Tag[]        @relation("Parent")
  attractions Attraction[]
}

model User {
  id        Int          @id @default(autoincrement())
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  name      String
  email     String       @unique
  banned    Boolean
  groups    Group[]      @relation("GroupMembers")
  founded   Group[]      @relation("GroupCreator")
  created   Attraction[] @relation("EventCreator")
}

model Group {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String   @db.VarChar(255)
  description String
  verified    Boolean
  members     User[]   @relation("GroupMembers")
  creator     User     @relation("GroupCreator", fields: [creatorId], references: [id])
  creatorId   Int
}

model TimeRange {
  id         Int      @id @default(autoincrement())
  startTime  DateTime
  endTime    DateTime
  schedule   Schedule @relation("Times", fields: [scheduleId], references: [id])
  scheduleId Int
}

model Schedule {
  id        Int         @id @default(autoincrement())
  frequency String
  times     TimeRange[] @relation("Times")
  event     Attraction? @relation("AttractionSchedule")
}

model Attraction {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String   @db.VarChar(255)
  address     String   @db.VarChar(255) // human readable???
  description String?
  schedule    Schedule @relation("AttractionSchedule", fields: [scheduleId], references: [id])
  scheduleId  Int
  presenceId  String?  @unique
  tags        Tag[]
  creator     User     @relation("EventCreator", fields: [creatorId], references: [id])
  creatorId   Int
  group       String
}
